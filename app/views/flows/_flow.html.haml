= form_for flow, remote: true do |f|

  .title-wrap
    .title
      - if f.object == @flow # and not(@flow.persisted?)
        = f.text_field :name, placeholder: "New Flow"
        .small-tools
          = link_to "Cancel", [:flows], remote: true, class: :cancel
          = f.submit class: :submit
      - else
        %h1
          =flow
          .small-tools
            =link_to "Delete", flow, method: :delete, remote: true, class: :delete, confirm: "Are you sure?"
            =link_to "Edit", [:edit, flow], remote: true, class: :edit

  - unless (errors = f.object.errors).empty?
    .errors
      %ul
        - f.object.errors.full_messages.each do |msg|
          %li=msg

  .steps
    - if flow == @flow
      - flow = @flow

    - flow.steps.each do |step|
      .step{ class: step.completed? ? "done" : "" }
        = f.fields_for :steps, step do |b|
          .dot=raw "&nbsp;"
          .dot-inner=raw "&nbsp;"
          .dot-small=raw "&nbsp;"
          .arrow-right=raw "&nbsp;"

          .inner
            .inner-content
              - if f.object == @flow
                = b.text_field :name, placeholder: "Step (required)", class: :step_name
                = b.text_area :comment, placeholder: "Comment (optional)", class: :step_comment

                .remove-magic
                  = b.check_box :_destroy, class: :step_destroy

                = link_to "Remove", "#step_remove", class: %w{delete step_remove}, confirm: "Are you sure?"
              -else
                %h2=step

            .inner-dummy
              %p
                %br/
                =link_to "Add step", "#new_step", class: :step_add

          .details
            .name=step

            - if step.comment.present?
              %p
                =step.comment

            .actions
              %p
                - if step.completed?
                  ="Completed #{time_ago_in_words(step.updated_at)} ago."
                - else
                  =link_to "Done", "#step_done", class: [:done, :step_done]

